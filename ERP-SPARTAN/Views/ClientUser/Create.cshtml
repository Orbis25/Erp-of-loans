@model Models.ViewModels.ClientUsers.CreateUserViewModel

@{
    ViewData["Title"] = "Create";
}

<div class="card">
    <div class="card-body">
        <h1>Nuevo Cliente</h1>
        @if (!Model.Enterprises.Any())
        {
            <div class="alert alert-info" role="alert">
                <i class="fa fa-info-circle"></i><i>Para crear un cliente tiene que tener al menos una empresa registrada, si no tiene por favor dirijase a la pantalla de empresas y cree una. <br /> de esta manera podra seleccionar la empresa a la que pertenece el cliente a crear</i>
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
        }
    </div>
</div>


<hr />
<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-12 col-sm-12 col-md-6">
                <form asp-action="Create">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Name" class="control-label">Nombres</label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="LastName" class="control-label">Apellidos</label>
                        <input asp-for="LastName" class="form-control" />
                        <span asp-validation-for="LastName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Email" class="control-label">Correo</label>
                        <input asp-for="Email" class="form-control" required=""
                               oninvalid="this.setCustomValidity('Campo requerido')"
                               oninput="setCustomValidity('')" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="IdentificationCard" class="control-label">Cedula</label>
                        @if (User.IsInRole(nameof(RolsAuthorization.HILoans)))
                        {
                            <input asp-for="IdentificationCard" class="form-control"
                                   required=""
                                   oninvalid="this.setCustomValidity('Campo requerido')"
                                   oninput="setCustomValidity('')" />
                        }
                        else
                        {
                            <input asp-for="IdentificationCard" class="form-control" />
                        }
                    </div>
                    <div class="form-group">
                        <label asp-for="PhoneNumber" class="control-label">Numero</label>
                        <input asp-for="PhoneNumber" id="phoneNumber" class="form-control"
                               required=""
                               oninvalid="this.setCustomValidity('Campo requerido')"
                               oninput="setCustomValidity('')" />
                        <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="EnterpriseId">Empresa</label>
                        <select class="form-control" asp-for="EnterpriseId"
                                required=""
                                oninvalid="this.setCustomValidity('Campo requerido')"
                                oninput="setCustomValidity('')">
                            <option value="" selected>Seleccione</option>
                            @foreach (var item in Model.Enterprises)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        </select>
                    </div>
                    @if (User.IsInRole(nameof(RolsAuthorization.Admin)))
                    {
                        <div class="form-group">
                            <label class="control-label">Rol</label>
                            <select asp-for="Rol" asp-items="Html.GetEnumSelectList<RolsAuthorization>()" class="form-control">
                            </select>
                            <span asp-validation-for="Rol" class="text-danger"></span>
                        </div>
                    }
                    <div class="form-group">
                        <label asp-for="Address"></label>
                        <textarea asp-for="Address" class="form-control"></textarea>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Crear" class="btn btn-primary" />
                        <a asp-action="Index" class="btn btn-dark">Regresar</a>
                    </div>
                </form>
            </div>
            <div class="col-12 col-sm-12 col-md-6">
                <img src="~/img/svg/client.svg" width="500" />
            </div>
        </div>
    </div>
</div>

<script src="~/js/ClientUser/index.js" asp-append-version="true"></script>